/* REXX */
/* Display available JES2 initiators */
msg_status = MSG('OFF')
myid=SYSVAR(SYSUID)
CVTSNAME      = D2X(C2d(Storage(10,4)) + 340)  /* Point to CVTSNAME */
SYSID         = strip(Storage(CVTSNAME,8))
parms='++24,300'
call cleanup
call alloc
call SDSF
call read
call cull
call sort
call report
call cleanup
exit
/*======================== SUB ROUTINES ===============================*/
CLEANUP:
  "FREE DA('"myid".JI.ISFIN') DELETE"
  "FREE DA('"myid".JI.ISFOUT') DELETE"
  "FREE DA('"myid".JI.ISFRPT') DELETE"
return
/*===*/
ALLOC:
  "ALLOC F(ISFIN) DA('"myid".JI.ISFIN') NEW CATALOG UNIT(SYSALLDA)
            SPACE(1,1) CYL RECFM(F B) BLKSIZE(80) LRECL(80)"
   if rc ¬= 0 then
     do
       say ' 'myid'.JI.ISFIN NOT ALLOCATED "NEW" .... Check error'
       exit
     end
  "ALLOC F(ISFOUT) DA('"myid".JI.ISFOUT') NEW CATALOG UNIT(SYSALLDA)
            SPACE(1,1) CYL RECFM(F B) BLKSIZE(300) LRECL(300)"
   if rc ¬= 0 then
     do
       say ' 'myid'.JI.ISFOUT NOT ALLOCATED .... Check error'
       exit
     end
  "ALLOC F(ISFRPT) DA('"myid".JI.ISFRPT') NEW CATALOG UNIT(SYSALLDA)
            SPACE(1,1) CYL RECFM(F) BLKSIZE(80) LRECL(80)"
   if rc ¬= 0 then
     do
       say ' 'myid'.JI.ISFRPT NOT ALLOCATED .... Check error'
       exit
     end
  ISFIN.1='INIT'
  "EXECIO * DISKW ISFIN (STEM ISFIN. FINIS)"
  "FREE FI(ISFIN)"
  "FREE DA('"myid".JI.ISFIN')"
  "ALLOC F(ISFIN) DA('"myid".JI.ISFIN') OLD"
   if rc ¬= 0 then
     do
       say ' 'myid'.JI.ISFIN NOT ALLOCATED "OLD" .... Check error'
       exit
     end
return
/*===*/
SDSF:
  address LINKPGM "SDSF parms"
  if RC \= 0 then
    do
      say 'SDSF RC='rc
      say 'SDSF error : REXX canceled'
      exit
    end
return
/*===*/
READ:
  "EXECIO * DISKR ISFOUT (STEM ISF. FINIS)"
return
/*===*/
CULL:
  i=0
  lx=0
  #l=1
  mydate=date('u')
  mytime=TIME()
  li.#l=' '
  li.#l='   ('SYSID')                    AVAILABLE INITIATORS'
  li.#l=li.#l || '            'mydate'  'mytime
  #l=#l+1
  li.#l='   Name Classes    Name CLasses    Name Classes    Name Classes'
  li.#l=li.#l || '    Name Classes'
  #l=#l+1
  li.#l=' =============================================================='
  li.#l=li.#l ||'================'
  #l=#l+1
  li.#l=' '
  do x=1 to isf.0
    if pos('INACTIVE',isf.x) /= 0 then
      do
        posinact=pos('INACTIVE',isf.x)
        posid=posinact-3
        pospast=posinact+8
        do y = pospast to pospast+8 by 1
          if substr(isf.x,y,1) /= ' ' then
            leave
        end
        posclass=y
        lx=lx+1
        if lx>5 then
          do
            lx=0
            #l=#l+1
            li.#l=' '
          end
       li.#l=li.#l || '   ' || substr(isf.x,posid,2)
       li.#l=li.#l || '   ' || substr(isf.x,posclass,8)
        itemp=substr(isf.x,posclass,8)
        do y=1 to 8 by 1
          if substr(itemp,y,1) = ' ' then
            leave
          else
            do
              i=i+1
              itab.i=substr(itemp,y,1)
            end
        end
      end
  end
  if i=0 then
    do
      li.#l=' '
      #l=#l+1
      li.#l='***  NO AVAILABLE INITIATORS  ***'
    end
  else
    do
      #l=#l+1
      li.#l=' =============================================================='
      li.#l=li.#l ||'================'
    end
return
/*===*/
SORT:
  if i=0 then return
  z=i-1
  do a=1 to z         /* outer loop */
    do b=1 to z       /* inner loop */
      c=b+1
      if substr(itab.b,1,1) > substr(itab.c,1,1) then
        do
          tmp = substr(itab.b,1,1)
          itab.b = itab.c
          itab.c = tmp
        end
    end
  end
  #l=#l+1
  li.#l=' ('||i||') Available Classes Follow :'
  #l=#l+1
  line=' '
  #out=0
  do II=1 to I by 1
    if itab.ii = '' then
      leave
    else
      do
        line=line || substr(itab.ii,1)
        #out=#out+1
        if #out > 78 then
          do
            li.#l=line
            #l=#l+1
            line = ' '
            li.#l=line
            #l=#l+1
            line = ' '
            #out=0
          end
      end
  end
  li.#l=line
return
/*===*/
REPORT:
  "EXECIO  *  DISKW ISFRPT (STEM li. FINIS)"
  "ISPEXEC BROWSE DATASET('"myid".JI.ISFRPT')"
return
